{"is_source_file": true, "format": "JavaScript (React hook)", "description": "This file defines a React custom hook named useFeatureFlag that utilizes memoization to efficiently check if a feature flag is enabled via an imported utility.", "external_files": ["../utils/featureFlags"], "external_methods": ["isEnabled"], "published": [], "classes": [], "methods": [{"name": "useFeatureFlag(flag)", "description": "A custom React hook that returns a memoized boolean indicating whether a specific feature flag is enabled.", "scope": "", "scopeKind": ""}], "calls": ["useMemo", "isEnabled"], "search-terms": ["useFeatureFlag", "React hook", "feature flags", "useMemo", "isEnabled", "featureFlags utils"], "state": 2, "file_id": 23, "knowledge_revision": 65, "git_revision": "", "ctags": [{"_type": "tag", "name": "useFeatureFlag", "path": "/home/kavia/workspace/code-generation/healthify-wellness-companion-38752-38761/healthify_frontend/src/hooks/useFeatureFlag.js", "pattern": "/^export default function useFeatureFlag(flag) {$/", "language": "JavaScript", "kind": "function", "signature": "(flag)"}], "hash": "dd4b7e35eb5af62b931b1f3907bf8aa5", "format-version": 4, "code-base-name": "healthify_frontend", "filename": "healthify_frontend/src/hooks/useFeatureFlag.js", "revision_history": [{"65": ""}]}